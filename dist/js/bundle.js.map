{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/util.js","webpack:///./js/gallery.js","webpack:///./js/backend.js","webpack:///./js/photo.js","webpack:///./js/preview.js","webpack:///./js/form.js","webpack:///./js/resize.js","webpack:///./js/effects.js","webpack:///./js/scale.js","webpack:///./js/filter.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getRandomNumber","min","max","Math","floor","random","getRandomArrayElement","initialArray","needRemove","arguments","length","undefined","randomElementIndex","randomElement","splice","lastTimeout","getRandomArray","copiedArray","slice","iter","acc","array","removeChildren","parent","lastChild","removeChild","runOnEscPress","evt","action","keyCode","runOnEnterPress","debounce","cb","debounceInterval","window","clearTimeout","setTimeout","photo","form","backend","filter","container","document","querySelector","uploadButton","errorPopup","errorPopupClose","errorPopupMessage","photos","photoElements","renderPhotos","photoDataArray","fragment","createDocumentFragment","map","forEach","appendChild","onSuccess","updatePhotos","it","data","photoData","comments","reduce","comment","concat","_toConsumableArray","split","url","likes","description","formatData","initialize","onErrorPopupCloseClick","classList","add","removeEventListener","onError","message","contains","remove","textContent","addEventListener","load","URL","ErrorStatus","400","401","404","500","createRequest","xhr","XMLHttpRequest","responseType","status","response","timeout","open","send","upload","preview","template","content","cloneNode","photoSource","photoComments","photoLikes","src","util","bodyElement","previewClose","previewImage","commentsCountBlock","commentsLoadMoreButton","commentsLoaded","previewCaption","previewLikes","previewCommentsBlock","commentsCounter","renderComments","commentsArray","commentsBlockElements","createCommentTemplate","insertAdjacentHTML","join","count","showCommentsLoadedCount","onCommentsLoadMoreButtonClick","hideCommentsLoadMoreButton","onCommentsLoadMoreButtonEnterPress","fillPreview","onPreviewCloseClick","onPreviewEscPress","resize","effects","uploadForm","uploadErrorBLock","uploadErrorMessage","editPanel","editPanelClose","onSuccessUpload","reset","onEditPanelCloseClick","onErrorUpload","onUploadFormSubmit","FormData","preventDefault","onEditPanelEscPress","finalize","resizeMinus","resizePlus","resizeValue","picturePreview","PictureSize","currentPictureSize","setPictureSize","size","style","onResizeMinusClick","onResizePlusClick","scale","effectLevel","effectPanel","effectToggles","querySelectorAll","defaultEffect","uploadedPicture","chrome","setFilter","sepia","marvin","phobos","heat","none","currentPictureClass","setPictureClass","effectName","setPictureEffect","effectValue","currentEffect","getEffectValue","onEffectToggleClick","selectedEffect","target","hide","show","setPinAction","setPinPosition","Array","from","effectToggle","checked","scalePanel","scalePin","scaleLevel","scaleLine","pin","onScalePinMouseDown","round","left","width","effect","scaleWidth","offsetWidth","startCoord","clientX","cursor","documentElement","onMouseMove","moveEvt","shift","currentCoord","offsetLeft","onMouseUp","upEvt","gallery","filtersContainer","filters","currentFilter","filterNameToFunction","filter-recommended","filter-popular","sort","x","y","filter-discussed","filter-random","filterPhotos","appliedFilter","setCurrentFilter","filteredPhotos","id"],"mappings":"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","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const ESC_KEY_CODE = 27;\nconst ENTER_KEY_CODE = 13;\n\nexport /**\n * Возвращает целое случайное число из отрезка [min, max]\n *\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nconst getRandomNumber = (min, max) =>\n  Math.floor(Math.random() * (max + 1 - min)) + min;\n\nexport /**\n * Возвращает случайный элемент массива initialArray и при необходимости удаляет его из массива\n *\n * @param {Array}   initialArray\n * @param {boolean} [needRemove=false] True - элемент удаляется из массива initialArray\n * @return {*}\n */\nconst getRandomArrayElement = (initialArray, needRemove = false) => {\n  const randomElementIndex = getRandomNumber(0, initialArray.length - 1);\n  const randomElement = initialArray[randomElementIndex];\n  if (needRemove) {\n    initialArray.splice(randomElementIndex, 1);\n  }\n\n  return randomElement;\n};\n\nexport /**\n * Возвращает массив случайной длины из отрезка [min, max], составленный\n * из уникальных случайных элементов массива initialArray\n *\n * @param {Array} initialArray Массив, из элементов которого формируется новый массив\n * @param {number} min Минимальная возможная длина возвращаемого массива (по умолчанию = 1)\n * @param {number} max Максимальная возможная длина возвращаемого массива (по умолчанию = длине массива initialArray)\n * @return {Array}\n */\nconst getRandomArray = (initialArray, min = 1, max = initialArray.length) => {\n  const copiedArray = initialArray.slice();\n  const length = getRandomNumber(min, max);\n\n  const iter = (acc, array) => {\n    if (acc.length === length) {\n      return acc;\n    }\n\n    const randomElement = getRandomArrayElement(array, true);\n    return iter([...acc, randomElement], array);\n  };\n\n  return iter([], copiedArray);\n};\n\nexport /**\n * Удаляет дочерние DOM-элементы у элемента parent\n *\n * @param {Node} parent\n */\nconst removeChildren = (parent) => {\n  while (parent.lastChild) {\n    parent.removeChild(parent.lastChild);\n  }\n};\n\nexport /**\n * Вызывает переданную функцию action, если нажатая клавиша - Esc\n *\n * @param {Event} evt\n * @param {function} action\n */\nconst runOnEscPress = (evt, action) => {\n  if (evt.keyCode === ESC_KEY_CODE) {\n    action();\n  }\n};\n\nexport /**\n * Вызывает переданную функцию action, если нажатая клавиша - Enter\n *\n * @param {Event} evt\n * @param {function} action\n */\nconst runOnEnterPress = (evt, action) => {\n  if (evt.keyCode === ENTER_KEY_CODE) {\n    action();\n  }\n};\n\nlet lastTimeout;\n\nexport /**\n * Откладывает выполнение функции cb на время debounceInterval\n * и предотвращает 'дребезг' при повтороном обращении к фукнции cb раньше,\n * чем через время debounceInterval\n *\n * @param {function} cb Выполняемая функция\n * @param {number} debounceInterval Время в мс\n */\nconst debounce = (cb, debounceInterval) => {\n  if (lastTimeout) {\n    window.clearTimeout(lastTimeout);\n  }\n  lastTimeout = window.setTimeout(cb, debounceInterval);\n};\n","import * as photo from './photo.js';\nimport * as form from './form.js';\nimport * as backend from './backend.js';\nimport * as filter from './filter.js';\n\n// DOM-элемент, в котором размещаются фотографии пользователей\nconst container = document.querySelector(`.pictures`);\n\n// Форма загрузки изображения\nconst uploadForm = document.querySelector(`.img-upload__form`);\n\n// Кнопка загрузки изображения\nconst uploadButton = uploadForm.querySelector(`#upload-file`);\n\n// Поп-ап для вывода возможной ошибки при загрузке и его элементы\nconst errorPopup = document.querySelector(`.error-popup`);\nconst errorPopupClose = errorPopup.querySelector(`.error-popup__cancel`);\nconst errorPopupMessage = errorPopup.querySelector(`.error-popup__message`);\n\nconst POPAP_ERROR_INTERVAL = 5000;\nconst COMMENT_LENGTH_MAX = 140;\n\nlet photos = [];\nlet photoElements = [];\n\n/**\n * Отображает DOM-элементы `Фотография`, созданный на основе массива объектов photoData,\n * на странице\n *\n * @param {Array.<Object>} photoDataArray\n */\nconst renderPhotos = (photoDataArray) => {\n  const fragment = document.createDocumentFragment();\n  photoElements = photoDataArray.map((value) => photo.create(value));\n  photoElements.forEach((value) => fragment.appendChild(value));\n\n  container.appendChild(fragment);\n};\n\n/**\n * Удаляет DOM-элементы `Фотография` photoElements\n *\n */\nconst removePhotos = () => {\n  photoElements.forEach((it) => container.removeChild(it));\n};\n\nexport /**\n * Обновляет DOM-элементы `Фотография` после фильтрации\n *\n * @param {Array.<Object>} photoDataArray\n */\nconst updatePhotos = (photoDataArray) => {\n  removePhotos();\n  renderPhotos(photoDataArray);\n};\n\n/**\n * Для корректного отображения разбивает слишком длинные комментарии,\n * предоставленные сервером, на комментарии длины не более COMMENT_LENGTH_MAX\n * и возвращает новый объект photoData\n *\n * @param {Object} photoData Объект до форматирования\n * @return {Object} Объект после форматирования\n */\nconst formatData = (photoData) => {\n  const comments = photoData.comments.reduce((acc, comment) =>\n    (comment.length > COMMENT_LENGTH_MAX ?\n      [...acc, ...comment.split(`. `)] :\n      [...acc, comment]),\n  []);\n\n  const {url, likes, description} = photoData;\n\n  return ({url, likes, comments, description});\n};\n\n/**\n * Форматирует полученные данные и отображает их,\n * инициализирует работу фильтрации\n *\n * @param {Array.<Object>} data Загруженные с сервера данные\n */\nconst onSuccess = (data) => {\n  photos = data.map((it) => formatData(it));\n  renderPhotos(photos);\n  filter.initialize(photos);\n};\n\n/**\n * Закрывает поп-ап с сообщением об ошибке\n *\n */\nconst onErrorPopupCloseClick = () => {\n  errorPopup.classList.add(`hidden`);\n  errorPopupClose.removeEventListener(`click`, onErrorPopupCloseClick);\n};\n\n/**\n * Показывает поп-ап с сообщением об ошибке\n *\n * @param {string} message\n */\nconst onError = (message) => {\n  if (errorPopup.classList.contains(`hidden`)) {\n    errorPopup.classList.remove(`hidden`);\n    errorPopupMessage.textContent = message;\n    setTimeout(onErrorPopupCloseClick, POPAP_ERROR_INTERVAL);\n    errorPopupClose.addEventListener(`click`, onErrorPopupCloseClick);\n  }\n};\n\n/**\n * Инициализирует работу со страницей сайта\n *\n */\nconst initialize = () => {\n  // Загружает с сервера фотографии и отображает их.\n  // В случае ошибки загрузки данных показывает поп-ап с описанием ошибки\n  backend.load(onSuccess, onError);\n\n  // Открывает панель редактирования фотографии при\n  // нажатии на кнопку uploadButton\n  uploadButton.addEventListener(`change`, form.initialize);\n};\n\ninitialize();\n","\nconst URL = `https://js.dump.academy/kekstagram`;\nconst SUCCESS_STATUS = 200;\nconst REQUEST_TIMEOUT = 5000;\n\nconst ErrorStatus = {\n  400: `Неверный запрос`,\n  401: `Пользователь не авторизован`,\n  404: `Ничего на найдено`,\n  500: `Внутренняя ошибка сервера`\n};\n\n/**\n * Возвращает новый объект XMLHttpRequest\n *\n * @param  {function} onSuccess Коллбэк, срабатывает при при успешном выполнении запроса\n * @param  {function} onError Коллбэк, срабатывает при при неуспешном выполнении запроса\n * @return {XMLHttpRequest} Объект XMLHttpRequest\n */\nconst createRequest = (onSuccess, onError) => {\n  const xhr = new XMLHttpRequest();\n\n  xhr.responseType = `json`;\n\n  xhr.addEventListener(`load`, () => {\n    if (xhr.status === SUCCESS_STATUS) {\n      onSuccess(xhr.response);\n    } else {\n      onError(`${xhr.status}: ${ErrorStatus[xhr.status]}`);\n    }\n  });\n\n  xhr.addEventListener(`error`, () =>\n    onError(`Произошла ошибка соединения`));\n\n  xhr.addEventListener(`timeout`, () =>\n    onError(`Запрос не успел выполниться за ${xhr.timeout} мс`));\n\n  xhr.timeout = REQUEST_TIMEOUT;\n\n  return xhr;\n};\n\nexport /**\n * Получает данные с сервера\n *\n * @param  {function} onSuccess Коллбэк, срабатывает при при успешном выполнении запроса\n * @param  {function} onError Коллбэк, срабатывает при при неуспешном выполнении запроса\n */\nconst load = (onSuccess, onError) => {\n  const xhr = createRequest(onSuccess, onError);\n\n  xhr.open(`GET`, `${URL}/data`);\n  xhr.send();\n};\n\nexport /**\n * Отправляет данные data на сервер\n *\n * @param  {*} data\n * @param  {function} onSuccess Коллбэк, срабатывает при при успешной отправке данных\n * @param  {function} onError Коллбэк, срабатывает при при неуспешной отправке данных\n */\nconst upload = (data, onSuccess, onError) => {\n  const xhr = createRequest(onSuccess, onError);\n\n  xhr.open(`POST`, URL);\n  xhr.send(data);\n};\n","import * as preview from './preview';\n\n// Шаблон для фотографии пользователя\nconst template = document.querySelector(`#picture`)\n    .content\n    .querySelector(`.picture__link`);\n\nexport /**\n * Возвращает DOM-элемент `Фотография`, созданный на основе объекта photoData\n *\n * @param {Object} photoData\n * @return {Node}\n */\nconst create = (photoData) => {\n  const photo = template.cloneNode(true);\n  const photoSource = photo.querySelector(`.picture__img`);\n  const photoComments = photo.querySelector(`.picture__stat--comments`);\n  const photoLikes = photo.querySelector(`.picture__stat--likes`);\n\n  const {url, likes, comments} = photoData;\n\n  photoSource.src = url;\n  photoComments.textContent = comments.length;\n  photoLikes.textContent = likes;\n\n  // При нажатии на DOM-элемент `Фотография` открывается его полноэкранная версия\n  photo.addEventListener(`click`, () => {\n    preview.open(photoData);\n  });\n\n  return photo;\n};\n","import * as util from './util';\n\nconst bodyElement = document.querySelector(`body`);\nconst preview = document.querySelector(`.big-picture`);\nconst previewClose = preview.querySelector(`.cancel`);\nconst previewImage = preview.querySelector(`.big-picture__img`)\n    .querySelector(`img`);\nconst commentsCountBlock = preview.querySelector(`.social__comment-count`);\nconst commentsLoadMoreButton = preview.querySelector(`.social__comment-loadmore`);\nconst commentsLoaded = preview.querySelector(`.comments-loaded`);\nconst previewCaption = preview.querySelector(`.social__caption`);\nconst previewLikes = preview.querySelector(`.likes-count`);\nconst previewCommentsBlock = preview.querySelector(`.social__comments`);\nconst COMMENTS_STEP = 5;\n\nlet comments = [];\nlet commentsCounter = 0;\n\n/**\n * Возвращает шаблон DOM-элемента для комментария comment\n *\n * @param {string} comment\n * @return {string}\n */\nconst createCommentTemplate = (comment) =>\n  `<li class=\"social__comment social__comment--text\">\n  <img class=\"social__picture\" src=\"img/avatar-${util.getRandomNumber(1, 6)}.svg\"\n  alt=\"Аватар комментатора фотографии\" width=\"35\" height=\"35\">${comment}</li>`;\n\n/**\n * Показывает количество загруженных комментариев\n *\n * @param {number} count\n */\nconst showCommentsLoadedCount = (count) => {\n  commentsLoaded.textContent = count;\n};\n\n/**\n * Вставляет сформированные на основе комментариев commentsArray\n * элементы в блок previewCommentsBlock,\n * показвает число загруженных комментариев commentsCounter\n *\n * @param {Array<String>} commentsArray\n */\nconst renderComments = (commentsArray) => {\n  const commentsBlockElements = commentsArray.map((comment) => createCommentTemplate(comment));\n  previewCommentsBlock.insertAdjacentHTML(`beforeend`, commentsBlockElements.join(``));\n  commentsCounter += commentsArray.length;\n  showCommentsLoadedCount(commentsCounter);\n};\n\n/**\n * Если оставшихся для отображения комментариев меньше COMMENTS_STEP,\n * то скрывает кнопку подгрузки новых комментариев.\n * Отображает не более COMMENTS_STEP комментариев\n *\n */\nconst onCommentsLoadMoreButtonClick = () => {\n  if (comments.length <= COMMENTS_STEP) {\n    hideCommentsLoadMoreButton();\n  }\n  renderComments(comments.splice(0, COMMENTS_STEP));\n};\n\n/**\n * Выполняет функцию onCommentsLoadMoreButtonClick при нажатии на ENTER\n *\n * @param {Event} evt\n */\nconst onCommentsLoadMoreButtonEnterPress = (evt) => {\n  util.runOnEnterPress(evt, onCommentsLoadMoreButtonClick);\n};\n\n/**\n * Показывает кнопку подгрузки новых комментариев\n * и добавляет обработчики событий на кнопку\n *\n */\nconst showCommentsLoadMoreButton = () => {\n  commentsLoadMoreButton.classList.remove(`hidden`);\n  commentsLoadMoreButton.addEventListener(`click`, onCommentsLoadMoreButtonClick);\n  commentsLoadMoreButton.addEventListener(`keydown`, onCommentsLoadMoreButtonEnterPress);\n};\n\n/**\n * Скрывает кнопку подгрузки новых комментариев\n * и удаляет обработчики событий с кнопки\n *\n */\nconst hideCommentsLoadMoreButton = () => {\n  commentsLoadMoreButton.classList.add(`hidden`);\n  commentsLoadMoreButton.removeEventListener(`click`, onCommentsLoadMoreButtonClick);\n  commentsLoadMoreButton.removeEventListener(`keydown`, onCommentsLoadMoreButtonEnterPress);\n};\n\n/**\n * Показывает блок с количеством комментариев\n * и отображает не более COMMENTS_STEP комментариев\n *\n */\nconst showCommentsCountBlock = () => {\n  commentsCountBlock.classList.remove(`hidden`);\n  renderComments(comments.splice(0, COMMENTS_STEP));\n};\n\n/**\n * Скрывает блок с количеством комментариев\n *\n */\nconst hideCommentsCountBlock = () => {\n  commentsCountBlock.classList.add(`hidden`);\n};\n\n/**\n * Наполняет DOM-элемент `Фотография в полноэкранном режиме` данными объекта photoData\n *\n * @param {Object} photoData\n */\nconst fillPreview = (photoData) => {\n  previewImage.src = photoData.url;\n  previewCaption.textContent = photoData.description;\n  previewLikes.textContent = photoData.likes;\n\n  util.removeChildren(previewCommentsBlock);\n\n  comments = photoData.comments.slice();\n  commentsCountBlock.querySelector(`.comments-count`).textContent = comments.length;\n\n  showCommentsCountBlock();\n\n  // В зависимости от количества комментариев показывает\n  // или скрывает блок загрузки новых комментариев\n  if (photoData.comments.length <= COMMENTS_STEP) {\n    hideCommentsLoadMoreButton();\n  } else {\n    showCommentsLoadMoreButton();\n  }\n};\n\n/**\n * Закрывает поп-ап с полноэкранной версией фотографии\n *\n */\nconst onPreviewCloseClick = () => {\n  comments = [];\n  commentsCounter = 0;\n  bodyElement.classList.remove(`modal-open`);\n  preview.classList.add(`hidden`);\n  hideCommentsCountBlock();\n  previewClose.removeEventListener(`click`, onPreviewCloseClick);\n  document.removeEventListener(`keydown`, onPreviewEscPress);\n};\n\n/**\n * Закрывает поп-ап с полноэкранной версией фотографии при нажатии на ESC\n *\n * @param {Event} evt\n */\nconst onPreviewEscPress = (evt) => {\n  util.runOnEscPress(evt, onPreviewCloseClick);\n};\n\nexport /**\n * Открывает поп-ап с полноэкранной версией фотографии\n *\n * @param {Object} photoData\n */\nconst open = (photoData) => {\n  bodyElement.classList.add(`modal-open`);\n  preview.classList.remove(`hidden`);\n  previewClose.addEventListener(`click`, onPreviewCloseClick);\n  document.addEventListener(`keydown`, onPreviewEscPress);\n  fillPreview(photoData);\n};\n","import * as util from './util.js';\nimport * as resize from './resize.js';\nimport * as effects from './effects.js';\nimport * as backend from './backend.js';\n\nconst bodyElement = document.querySelector(`body`);\nconst uploadButton = document.querySelector(`#upload-file`);\nconst uploadForm = document.querySelector(`.img-upload__form`);\nconst uploadErrorBLock = uploadForm.querySelector(`.img-upload__message--error`);\nconst uploadErrorMessage = uploadErrorBLock.querySelector(`.error__message`);\nconst editPanel = document.querySelector(`.img-upload__overlay`);\nconst editPanelClose = editPanel.querySelector(`#upload-cancel`);\n\n/**\n * При успешной отправке формы очищает ее поля\n * и закрывает панель редактирования\n *\n */\nconst onSuccessUpload = () => {\n  uploadForm.reset();\n  onEditPanelCloseClick();\n};\n\n/**\n * При неуспешной отправке формы закрывает панель редактирования\n * и показывает блок с ошибкой message\n *\n * @param {string} message\n */\nconst onErrorUpload = (message) => {\n  onEditPanelCloseClick();\n  uploadErrorBLock.classList.remove(`hidden`);\n  uploadErrorMessage.textContent = message;\n};\n\n/**\n * Отменяет действия по умолчанию при отправке формы\n * и запускает функцию отправки данных на сервер\n *\n * @param {Event} evt\n */\nconst onUploadFormSubmit = (evt) => {\n  backend.upload(new FormData(uploadForm), onSuccessUpload, onErrorUpload);\n  evt.preventDefault();\n};\n\n/**\n * Закрывает панель редактирования фотографии,\n * удаляет обработчики событий с недоступных более элементов\n *\n */\nconst onEditPanelCloseClick = () => {\n  uploadButton.value = ``;\n  bodyElement.classList.remove(`modal-open`);\n  editPanel.classList.add(`hidden`);\n  editPanelClose.removeEventListener(`click`, onEditPanelCloseClick);\n  document.removeEventListener(`keydown`, onEditPanelEscPress);\n  resize.finalize();\n  effects.finalize();\n};\n\n/**\n * Закрывает панель редактирования фотографии при нажатии на ESC\n *\n * @param {Event} evt\n */\nconst onEditPanelEscPress = (evt) => {\n  util.runOnEscPress(evt, onEditPanelCloseClick);\n};\n\nexport /**\n * Открывает панель редактирования фотографии,\n * добавляет обработчики событий\n *\n */\nconst initialize = () => {\n  bodyElement.classList.add(`modal-open`);\n  editPanel.classList.remove(`hidden`);\n  editPanelClose.addEventListener(`click`, onEditPanelCloseClick);\n  document.addEventListener(`keydown`, onEditPanelEscPress);\n  uploadForm.addEventListener(`submit`, onUploadFormSubmit);\n  resize.initialize();\n  effects.initialize();\n};\n\n","const uploadForm = document.querySelector(`.img-upload__form`);\nconst resizeMinus = uploadForm.querySelector(`.resize__control--minus`);\nconst resizePlus = uploadForm.querySelector(`.resize__control--plus`);\nconst resizeValue = uploadForm.querySelector(`.resize__control--value`);\nconst picturePreview = uploadForm.querySelector(`.img-upload__preview`);\n\nconst PictureSize = {\n  MIN: 25,\n  MAX: 100,\n  DEFAULT: 100,\n  STEP: 25\n};\n\nlet currentPictureSize = 100;\n\n\n// Масштабирование изображения\n/**\n * Записывает новый масштаб изображения size в поле resizeValue\n * м масштабирует изображение picturePreview на величину size\n * через задание ему стиля `transform: scale(size / 100)`\n *\n * @param {number} size\n */\nconst setPictureSize = (size) => {\n  resizeValue.value = `${size}%`;\n  picturePreview.style = `transform: scale(${size / 100})`;\n  currentPictureSize = size;\n};\n\n/**\n * Уменьшает масштаб изображения на величину PictureSize.STEP\n * и записывает новый масштаб изображения в поле resizeValue\n *\n */\nconst onResizeMinusClick = () => {\n  if (currentPictureSize > PictureSize.MIN) {\n    const newSize = currentPictureSize - PictureSize.STEP;\n    setPictureSize(newSize);\n  }\n};\n\n/**\n * Увеличивает масштаб изображения на величину PictureSize.STEP\n * и записывает новый масштаб изображения в поле resizeValue\n *\n */\nconst onResizePlusClick = () => {\n  if (currentPictureSize < PictureSize.MAX) {\n    const newSize = currentPictureSize + PictureSize.STEP;\n    setPictureSize(newSize);\n  }\n};\n\nexport /**\n * Устанавливает масштаб PictureSize.DEFAULT загруженному изображению\n * и добавляет обработчики на кнопки масштабирования изображения\n *\n */\nconst initialize = () => {\n  setPictureSize(PictureSize.DEFAULT);\n  resizeMinus.addEventListener(`click`, onResizeMinusClick);\n  resizePlus.addEventListener(`click`, onResizePlusClick);\n};\n\nexport /**\n * Удаляет обработчики с кнопок масштабирования изображения\n *\n */\nconst finalize = () => {\n  resizeMinus.removeEventListener(`click`, onResizeMinusClick);\n  resizePlus.removeEventListener(`click`, onResizePlusClick);\n};\n","import * as scale from './scale.js';\n\nconst editPanel = document.querySelector(`.img-upload__overlay`);\nconst scalePanel = editPanel.querySelector(`.scale`);\nconst effectLevel = scalePanel.querySelector(`.scale__value`);\nconst effectPanel = editPanel.querySelector(`.effects`);\nconst effectToggles = effectPanel.querySelectorAll(`.effects__radio`);\nconst defaultEffect = effectPanel.querySelector(`#effect-none`);\nconst uploadedPicture = editPanel.querySelector(`.img-upload__preview > img`);\n\nconst EFFECT_MAX_LEVEL = 100;\n\nconst effects = {\n  chrome: {\n    min: 0,\n    max: 1,\n    setFilter: (value) => `grayscale(${value})`\n  },\n  sepia: {\n    min: 0,\n    max: 1,\n    setFilter: (value) => `sepia(${value})`\n  },\n  marvin: {\n    min: 0,\n    max: 100,\n    setFilter: (value) => `invert(${value}%)`\n  },\n  phobos: {\n    min: 0,\n    max: 3,\n    setFilter: (value) => `blur(${value}px)`\n  },\n  heat: {\n    min: 1,\n    max: 3,\n    setFilter: (value) => `brightness(${value})`\n  },\n  none: {\n    min: 0,\n    max: 0,\n    setFilter: () => `none`\n  }\n};\n\nlet currentPictureClass;\n\n/**\n * Устанавливает класс загруженному изображению\n * в соответствии с effectName\n *\n * @param {string} effectName\n */\nconst setPictureClass = (effectName) => {\n  if (currentPictureClass) {\n    uploadedPicture.classList.remove(currentPictureClass);\n  }\n  uploadedPicture.classList.add(`effects__preview--${effectName}`);\n  currentPictureClass = `effects__preview--${effectName}`;\n};\n\n/**\n * Возвращает отмасштабированное в соответствии с effectName\n * значение для эффекта\n *\n * @param {number} value Значение до масштабирования: от 0 до 100\n * @param {string} effectName Примененный эффект\n * @return {number} Отмасштабированное значение\n */\nconst getEffectValue = (value, effectName) => {\n  const currentEffect = effects[effectName];\n  return currentEffect.min + value * (currentEffect.max - currentEffect.min) / EFFECT_MAX_LEVEL;\n};\n\n/**\n * Устанавливает стиль для загруженного изображения\n * в зависимости от примененного эффекта effectName\n *\n * @param {string} effectName\n */\nconst setPictureEffect = (effectName) => {\n  const effectValue = getEffectValue(effectLevel.value, effectName);\n  uploadedPicture.style.filter = effects[effectName].setFilter(effectValue);\n};\n\n/**\n * В зависимости от выбранного эффекта скрывает или показывает\n * ползунок scalePanel; передает эффект и функцию применения эффекта\n * для пина ползунка; устанавливает пин ползунка в максимальное\n * положение; устанавливает класс и стиль на загруженное изображение\n *\n * @param {Event} evt\n */\nconst onEffectToggleClick = (evt) => {\n  const selectedEffect = evt.target;\n  if (selectedEffect === defaultEffect) {\n    scale.hide();\n  } else {\n    scale.show();\n    scale.setPinAction(selectedEffect.value, setPictureEffect);\n  }\n  scale.setPinPosition(EFFECT_MAX_LEVEL);\n  setPictureClass(selectedEffect.value);\n  setPictureEffect(selectedEffect.value);\n};\n\nexport /**\n * Устанавливает обработчики событий на переключатели эффектов;\n * устанавливает класс и стиль `без эффектов` загруженному изображению\n * и скрывает ползунок scalePanel\n *\n */\nconst initialize = () => {\n  Array.from(effectToggles).forEach((effectToggle) =>\n    effectToggle.addEventListener(`click`, onEffectToggleClick));\n  defaultEffect.checked = true;\n  setPictureClass(defaultEffect.value);\n  setPictureEffect(defaultEffect.value);\n  scale.hide();\n};\n\nexport /**\n * Удаляет обработчики событий с переключателей эффектов\n *\n */\nconst finalize = () => {\n  Array.from(effectToggles).forEach((effectToggle) =>\n    effectToggle.removeEventListener(`click`, onEffectToggleClick));\n};\n","const editPanel = document.querySelector(`.img-upload__overlay`);\nconst scalePanel = editPanel.querySelector(`.scale`);\nconst effectLevel = scalePanel.querySelector(`.scale__value`);\nconst scalePin = scalePanel.querySelector(`.scale__pin`);\nconst scaleLevel = scalePanel.querySelector(`.scale__level`);\nconst scaleLine = scalePanel.querySelector(`.scale__line`);\nconst EFFECT_MAX_LEVEL = 100;\nlet pin;\n\nexport /**\n * Скрывает ползунок scale и удаляет обработчик событий\n * с пина ползунка\n *\n */\nconst hide = () => {\n  scalePanel.classList.add(`hidden`);\n  scalePin.removeEventListener(`mousedown`, onScalePinMouseDown);\n};\n\nexport /**\n * Показывает ползунок scale и добавлляет обработчик событий\n * для пина ползунка\n *\n */\nconst show = () => {\n  if (scalePanel.classList.contains(`hidden`)) {\n    scalePanel.classList.remove(`hidden`);\n    scalePin.addEventListener(`mousedown`, onScalePinMouseDown);\n  }\n};\n\nexport /**\n * Присваивает уровню эффекта effectLevel значение value;\n * перемещает пин ползунка в соответствии с величиной value\n *\n * @param {number} value Значение от 0 до 100\n */\nconst setPinPosition = (value) => {\n  effectLevel.value = Math.round(value);\n  scalePin.style.left = `${value}%`;\n  scaleLevel.style.width = `${value}%`;\n};\n\nexport /**\n * Присваивает переменной pin значения примененного эффекта\n * и функции, используюшейся при перемещении пина\n *\n * @param {string} effect\n * @param {function} action\n */\nconst setPinAction = (effect, action) => {\n  pin = {\n    effect,\n    action\n  };\n};\n\n/**\n * Перемещает пин позунка и в зависимости от его положения\n * применяет эффекты к изображению\n *\n * @param {Event} evt\n */\nconst onScalePinMouseDown = (evt) => {\n  evt.preventDefault();\n  const scaleWidth = scaleLine.offsetWidth;\n\n  let startCoord = evt.clientX;\n\n  scalePin.style.cursor = `none`;\n  document.documentElement.style.cursor = `none`;\n\n  const onMouseMove = (moveEvt) => {\n    moveEvt.preventDefault();\n\n    const shift = startCoord - moveEvt.clientX;\n    startCoord = moveEvt.clientX;\n\n    let currentCoord = scalePin.offsetLeft - shift;\n\n    if (currentCoord < 0) {\n      currentCoord = 0;\n    } else if (currentCoord > scaleWidth) {\n      currentCoord = scaleWidth;\n    }\n\n    const currentValue = currentCoord * EFFECT_MAX_LEVEL / scaleWidth;\n\n    setPinPosition(currentValue);\n    pin.action(pin.effect);\n  };\n\n  const onMouseUp = (upEvt) => {\n    upEvt.preventDefault();\n\n    scalePin.style.cursor = `move`;\n    document.documentElement.style.cursor = `auto`;\n\n    document.removeEventListener(`mousemove`, onMouseMove);\n    document.removeEventListener(`mouseup`, onMouseUp);\n  };\n\n  document.addEventListener(`mousemove`, onMouseMove);\n  document.addEventListener(`mouseup`, onMouseUp);\n};\n","import * as gallery from './gallery.js';\nimport * as util from './util.js';\n\nconst filtersContainer = document.querySelector(`.img-filters`);\nconst filters = filtersContainer.querySelectorAll(`.img-filters__button`);\nconst DEBOUNCE_INTERVAL = 500;\n\nlet currentFilter;\n\n/**\n * Устанавливает текущий применный фильтр\n * и добавляет ему класс для стилизации\n *\n * @param {Node} filter\n */\nconst setCurrentFilter = (filter) => {\n  if (currentFilter) {\n    currentFilter.classList.remove(`img-filters__button--active`);\n  }\n  filter.classList.add(`img-filters__button--active`);\n  currentFilter = filter;\n};\n\n/**\n * Возвращает переданный аргумент без изменений\n *\n * @param {*} value\n * @return {*}\n */\nconst identity = (value) => value;\n\n/**\n * Возвращает массив фотографий, отсортированный\n * по количеству лайков\n *\n * @param {Array<Object>} photos\n * @return {Array<Object>}\n */\nconst sortByLikes = (photos) =>\n  photos.slice().sort((x, y) => y.likes - x.likes);\n\n/**\n * Возвращает массив фотографий, отсортированный\n * по количеству комментариев\n *\n * @param {Array<Object>} photos\n * @return {Array<Object>}\n */\nconst sortByComments = (photos) =>\n  photos.slice().sort((x, y) => y.comments.length - x.comments.length);\n\n// Соответсвие выбранного фильтра функции фильтрации\nconst filterNameToFunction = {\n  'filter-recommended': identity,\n  'filter-popular': sortByLikes,\n  'filter-discussed': sortByComments,\n  'filter-random': util.getRandomArray\n};\n\nexport /**\n * В соответвтвии с выбранным фильтром применяет\n * фильтрацию для фотографий photos и вызывает функцию updatePhotos\n * для обновления DOM-элементов `Фотография` с предотвравщением дребезга\n *\n * @param {Event} evt\n * @param {Array<Object>} photos\n */\nconst filterPhotos = (evt, photos) => {\n  const appliedFilter = evt.target;\n\n  if (appliedFilter !== currentFilter) {\n    setCurrentFilter(appliedFilter);\n\n    const filteredPhotos = filterNameToFunction[appliedFilter.id](photos);\n    util.debounce(() => gallery.updatePhotos(filteredPhotos), DEBOUNCE_INTERVAL);\n  }\n};\n\nexport /**\n * Показывает блок с фильтрами,\n * устанавливает обработчики событий на переключатели фильтров\n *\n * @param {Array<Object>} photos\n */\nconst initialize = (photos) => {\n  filtersContainer.classList.remove(`img-filters--inactive`);\n  currentFilter = filters[0];\n  Array.from(filters).forEach((filter) =>\n    filter.addEventListener(`click`, (evt) => {\n      filterPhotos(evt, photos);\n    })\n  );\n};\n"],"sourceRoot":""}