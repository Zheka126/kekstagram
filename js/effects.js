'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.finalize = exports.initialize = undefined;

var _scale = require('./scale.js');

var scale = _interopRequireWildcard(_scale);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var editPanel = document.querySelector('.img-upload__overlay');
var scalePanel = editPanel.querySelector('.scale');
var effectLevel = scalePanel.querySelector('.scale__value');
var effectPanel = editPanel.querySelector('.effects');
var effectToggles = effectPanel.querySelectorAll('.effects__radio');
var defaultEffect = effectPanel.querySelector('#effect-none');
var uploadedPicture = editPanel.querySelector('.img-upload__preview > img');

var EFFECT_MAX_LEVEL = 100;

var effects = {
  chrome: {
    min: 0,
    max: 1,
    setFilter: function setFilter(value) {
      return 'grayscale(' + value + ')';
    }
  },
  sepia: {
    min: 0,
    max: 1,
    setFilter: function setFilter(value) {
      return 'sepia(' + value + ')';
    }
  },
  marvin: {
    min: 0,
    max: 100,
    setFilter: function setFilter(value) {
      return 'invert(' + value + '%)';
    }
  },
  phobos: {
    min: 0,
    max: 3,
    setFilter: function setFilter(value) {
      return 'blur(' + value + 'px)';
    }
  },
  heat: {
    min: 1,
    max: 3,
    setFilter: function setFilter(value) {
      return 'brightness(' + value + ')';
    }
  },
  none: {
    min: 0,
    max: 0,
    setFilter: function setFilter() {
      return 'none';
    }
  }
};

var currentPictureClass = void 0;

/**
 * Устанавливает класс загруженному изображению
 * в соответствии с effectName
 *
 * @param {string} effectName
 */
var setPictureClass = function setPictureClass(effectName) {
  if (currentPictureClass) {
    uploadedPicture.classList.remove(currentPictureClass);
  }
  uploadedPicture.classList.add('effects__preview--' + effectName);
  currentPictureClass = 'effects__preview--' + effectName;
};

/**
 * Возвращает отмасштабированное в соответствии с effectName
 * значение для эффекта
 *
 * @param {number} value Значение до масштабирования: от 0 до 100
 * @param {string} effectName Примененный эффект
 * @return {number} Отмасштабированное значение
 */
var getEffectValue = function getEffectValue(value, effectName) {
  var currentEffect = effects[effectName];
  return currentEffect.min + value * (currentEffect.max - currentEffect.min) / EFFECT_MAX_LEVEL;
};

/**
 * Устанавливает стиль для загруженного изображения
 * в зависимости от примененного эффекта effectName
 *
 * @param {string} effectName
 */
var setPictureEffect = function setPictureEffect(effectName) {
  var effectValue = getEffectValue(effectLevel.value, effectName);
  uploadedPicture.style.filter = effects[effectName].setFilter(effectValue);
};

/**
 * В зависимости от выбранного эффекта скрывает или показывает
 * ползунок scalePanel; передает эффект и функцию применения эффекта
 * для пина ползунка; устанавливает пин ползунка в максимальное
 * положение; устанавливает класс и стиль на загруженное изображение
 *
 * @param {Event} evt
 */
var onEffectToggleClick = function onEffectToggleClick(evt) {
  var selectedEffect = evt.target;
  if (selectedEffect === defaultEffect) {
    scale.hide();
  } else {
    scale.show();
    scale.setPinAction(selectedEffect.value, setPictureEffect);
  }
  scale.setPinPosition(EFFECT_MAX_LEVEL);
  setPictureClass(selectedEffect.value);
  setPictureEffect(selectedEffect.value);
};

/**
* Устанавливает обработчики событий на переключатели эффектов;
* устанавливает класс и стиль `без эффектов` загруженному изображению
* и скрывает ползунок scalePanel
*
*/
var initialize = exports.initialize = function initialize() {
  Array.from(effectToggles).forEach(function (effectToggle) {
    return effectToggle.addEventListener('click', onEffectToggleClick);
  });
  defaultEffect.checked = true;
  setPictureClass(defaultEffect.value);
  setPictureEffect(defaultEffect.value);
  scale.hide();
};

/**
* Удаляет обработчики событий с переключателей эффектов
*
*/
var finalize = exports.finalize = function finalize() {
  Array.from(effectToggles).forEach(function (effectToggle) {
    return effectToggle.removeEventListener('click', onEffectToggleClick);
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,