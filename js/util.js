"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var ESC_KEY_CODE = 27;

/**
* Возвращает целое случайное число из отрезка [min, max]
*
* @param {number} min
* @param {number} max
* @return {number}
*/
var getRandomNumber = exports.getRandomNumber = function getRandomNumber(min, max) {
  return Math.floor(Math.random() * (max + 1 - min)) + min;
};

/**
* Возвращает случайный элемент массива initialArray и при необходимости удаляет его из массива
*
* @param {Array}   initialArray
* @param {boolean} [needRemove=false] True - элемент удаляется из массива initialArray
* @return {*}
*/
var getRandomArrayElement = exports.getRandomArrayElement = function getRandomArrayElement(initialArray) {
  var needRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var randomElementIndex = getRandomNumber(0, initialArray.length - 1);
  var randomElement = initialArray[randomElementIndex];
  if (needRemove) {
    initialArray.splice(randomElementIndex, 1);
  }

  return randomElement;
};

/**
* Возвращает массив случайной длины из отрезка [min, max], составленный
* из уникальных случайных элементов массива initialArray
*
* @param {Array} initialArray Массив, из элементов которого формируется новый массив
* @param {number} min Минимальная возможная длина возвращаемого массива (по умолчанию = 1)
* @param {number} max Максимальная возможная длина возвращаемого массива (по умолчанию = длине массива initialArray)
* @return {Array}
*/
var getRandomArray = exports.getRandomArray = function getRandomArray(initialArray) {
  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : initialArray.length;

  var copiedArray = initialArray.slice();
  var length = getRandomNumber(min, max);

  var iter = function iter(acc, array) {
    if (acc.length === length) {
      return acc;
    }

    var randomElement = getRandomArrayElement(array, true);
    return iter([].concat(_toConsumableArray(acc), [randomElement]), array);
  };

  return iter([], copiedArray);
};

/**
* Удаляет дочерние DOM-элементы у элемента parent
*
* @param {Node} parent
*/
var removeChildren = exports.removeChildren = function removeChildren(parent) {
  while (parent.lastChild) {
    parent.removeChild(parent.lastChild);
  }
};

/**
* Вызывает переданную функцию action, если нажатая клавиша - Esc
*
* @param {Event} evt
* @param {function} action
*/
var runOnEscPress = exports.runOnEscPress = function runOnEscPress(evt, action) {
  if (evt.keyCode === ESC_KEY_CODE) {
    action();
  }
};

var lastTimeout = void 0;

/**
* Откладывает выполнение функции cb на время debounceInterval
* и предотвращает 'дребезг' при повтороном обращении к фукнции cb раньше,
* чем через время debounceInterval
*
* @param {function} cb Выполняемая функция
* @param {number} debounceInterval Время в мс
*/
var debounce = exports.debounce = function debounce(cb, debounceInterval) {
  if (lastTimeout) {
    window.clearTimeout(lastTimeout);
  }
  lastTimeout = window.setTimeout(cb, debounceInterval);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2pzL3V0aWwuanMiXSwibmFtZXMiOlsiRVNDX0tFWV9DT0RFIiwiZ2V0UmFuZG9tTnVtYmVyIiwibWluIiwibWF4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiZ2V0UmFuZG9tQXJyYXlFbGVtZW50IiwiaW5pdGlhbEFycmF5IiwibmVlZFJlbW92ZSIsInJhbmRvbUVsZW1lbnRJbmRleCIsImxlbmd0aCIsInJhbmRvbUVsZW1lbnQiLCJzcGxpY2UiLCJnZXRSYW5kb21BcnJheSIsImNvcGllZEFycmF5Iiwic2xpY2UiLCJpdGVyIiwiYWNjIiwiYXJyYXkiLCJyZW1vdmVDaGlsZHJlbiIsInBhcmVudCIsImxhc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwicnVuT25Fc2NQcmVzcyIsImV2dCIsImFjdGlvbiIsImtleUNvZGUiLCJsYXN0VGltZW91dCIsImRlYm91bmNlIiwiY2IiLCJkZWJvdW5jZUludGVydmFsIiwid2luZG93IiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFNQSxlQUFlLEVBQXJCOztBQUVPOzs7Ozs7O0FBT1AsSUFBTUMsNENBQWtCLFNBQWxCQSxlQUFrQixDQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUN0QkMsS0FBS0MsS0FBTCxDQUFXRCxLQUFLRSxNQUFMLE1BQWlCSCxNQUFNLENBQU4sR0FBVUQsR0FBM0IsQ0FBWCxJQUE4Q0EsR0FEeEI7QUFBQSxDQUF4Qjs7QUFHTzs7Ozs7OztBQU9QLElBQU1LLHdEQUF3QixTQUF4QkEscUJBQXdCLENBQUNDLFlBQUQsRUFBc0M7QUFBQSxNQUF2QkMsVUFBdUIsdUVBQVYsS0FBVTs7QUFDbEUsTUFBTUMscUJBQXFCVCxnQkFBZ0IsQ0FBaEIsRUFBbUJPLGFBQWFHLE1BQWIsR0FBc0IsQ0FBekMsQ0FBM0I7QUFDQSxNQUFNQyxnQkFBZ0JKLGFBQWFFLGtCQUFiLENBQXRCO0FBQ0EsTUFBSUQsVUFBSixFQUFnQjtBQUNkRCxpQkFBYUssTUFBYixDQUFvQkgsa0JBQXBCLEVBQXdDLENBQXhDO0FBQ0Q7O0FBRUQsU0FBT0UsYUFBUDtBQUNELENBUkQ7O0FBVU87Ozs7Ozs7OztBQVNQLElBQU1FLDBDQUFpQixTQUFqQkEsY0FBaUIsQ0FBQ04sWUFBRCxFQUFzRDtBQUFBLE1BQXZDTixHQUF1Qyx1RUFBakMsQ0FBaUM7QUFBQSxNQUE5QkMsR0FBOEIsdUVBQXhCSyxhQUFhRyxNQUFXOztBQUMzRSxNQUFNSSxjQUFjUCxhQUFhUSxLQUFiLEVBQXBCO0FBQ0EsTUFBTUwsU0FBU1YsZ0JBQWdCQyxHQUFoQixFQUFxQkMsR0FBckIsQ0FBZjs7QUFFQSxNQUFNYyxPQUFPLFNBQVBBLElBQU8sQ0FBQ0MsR0FBRCxFQUFNQyxLQUFOLEVBQWdCO0FBQzNCLFFBQUlELElBQUlQLE1BQUosS0FBZUEsTUFBbkIsRUFBMkI7QUFDekIsYUFBT08sR0FBUDtBQUNEOztBQUVELFFBQU1OLGdCQUFnQkwsc0JBQXNCWSxLQUF0QixFQUE2QixJQUE3QixDQUF0QjtBQUNBLFdBQU9GLGtDQUFTQyxHQUFULElBQWNOLGFBQWQsSUFBOEJPLEtBQTlCLENBQVA7QUFDRCxHQVBEOztBQVNBLFNBQU9GLEtBQUssRUFBTCxFQUFTRixXQUFULENBQVA7QUFDRCxDQWREOztBQWdCTzs7Ozs7QUFLUCxJQUFNSywwQ0FBaUIsU0FBakJBLGNBQWlCLENBQUNDLE1BQUQsRUFBWTtBQUNqQyxTQUFPQSxPQUFPQyxTQUFkLEVBQXlCO0FBQ3ZCRCxXQUFPRSxXQUFQLENBQW1CRixPQUFPQyxTQUExQjtBQUNEO0FBQ0YsQ0FKRDs7QUFNTzs7Ozs7O0FBTVAsSUFBTUUsd0NBQWdCLFNBQWhCQSxhQUFnQixDQUFDQyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDckMsTUFBSUQsSUFBSUUsT0FBSixLQUFnQjNCLFlBQXBCLEVBQWtDO0FBQ2hDMEI7QUFDRDtBQUNGLENBSkQ7O0FBTUEsSUFBSUUsb0JBQUo7O0FBRU87Ozs7Ozs7O0FBUVAsSUFBTUMsOEJBQVcsU0FBWEEsUUFBVyxDQUFDQyxFQUFELEVBQUtDLGdCQUFMLEVBQTBCO0FBQ3pDLE1BQUlILFdBQUosRUFBaUI7QUFDZkksV0FBT0MsWUFBUCxDQUFvQkwsV0FBcEI7QUFDRDtBQUNEQSxnQkFBY0ksT0FBT0UsVUFBUCxDQUFrQkosRUFBbEIsRUFBc0JDLGdCQUF0QixDQUFkO0FBQ0QsQ0FMRCIsImZpbGUiOiJ1dGlsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRVNDX0tFWV9DT0RFID0gMjc7XG5cbmV4cG9ydCAvKipcbiAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGG0LXQu9C+0LUg0YHQu9GD0YfQsNC50L3QvtC1INGH0LjRgdC70L4g0LjQtyDQvtGC0YDQtdC30LrQsCBbbWluLCBtYXhdXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IG1pblxuICogQHBhcmFtIHtudW1iZXJ9IG1heFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5jb25zdCBnZXRSYW5kb21OdW1iZXIgPSAobWluLCBtYXgpID0+XG4gIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggKyAxIC0gbWluKSkgKyBtaW47XG5cbmV4cG9ydCAvKipcbiAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGB0LvRg9GH0LDQudC90YvQuSDRjdC70LXQvNC10L3RgiDQvNCw0YHRgdC40LLQsCBpbml0aWFsQXJyYXkg0Lgg0L/RgNC4INC90LXQvtCx0YXQvtC00LjQvNC+0YHRgtC4INGD0LTQsNC70Y/QtdGCINC10LPQviDQuNC3INC80LDRgdGB0LjQstCwXG4gKlxuICogQHBhcmFtIHtBcnJheX0gICBpbml0aWFsQXJyYXlcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW25lZWRSZW1vdmU9ZmFsc2VdIFRydWUgLSDRjdC70LXQvNC10L3RgiDRg9C00LDQu9GP0LXRgtGB0Y8g0LjQtyDQvNCw0YHRgdC40LLQsCBpbml0aWFsQXJyYXlcbiAqIEByZXR1cm4geyp9XG4gKi9cbmNvbnN0IGdldFJhbmRvbUFycmF5RWxlbWVudCA9IChpbml0aWFsQXJyYXksIG5lZWRSZW1vdmUgPSBmYWxzZSkgPT4ge1xuICBjb25zdCByYW5kb21FbGVtZW50SW5kZXggPSBnZXRSYW5kb21OdW1iZXIoMCwgaW5pdGlhbEFycmF5Lmxlbmd0aCAtIDEpO1xuICBjb25zdCByYW5kb21FbGVtZW50ID0gaW5pdGlhbEFycmF5W3JhbmRvbUVsZW1lbnRJbmRleF07XG4gIGlmIChuZWVkUmVtb3ZlKSB7XG4gICAgaW5pdGlhbEFycmF5LnNwbGljZShyYW5kb21FbGVtZW50SW5kZXgsIDEpO1xuICB9XG5cbiAgcmV0dXJuIHJhbmRvbUVsZW1lbnQ7XG59O1xuXG5leHBvcnQgLyoqXG4gKiDQktC+0LfQstGA0LDRidCw0LXRgiDQvNCw0YHRgdC40LIg0YHQu9GD0YfQsNC50L3QvtC5INC00LvQuNC90Ysg0LjQtyDQvtGC0YDQtdC30LrQsCBbbWluLCBtYXhdLCDRgdC+0YHRgtCw0LLQu9C10L3QvdGL0LlcbiAqINC40Lcg0YPQvdC40LrQsNC70YzQvdGL0YUg0YHQu9GD0YfQsNC50L3Ri9GFINGN0LvQtdC80LXQvdGC0L7QsiDQvNCw0YHRgdC40LLQsCBpbml0aWFsQXJyYXlcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBpbml0aWFsQXJyYXkg0JzQsNGB0YHQuNCyLCDQuNC3INGN0LvQtdC80LXQvdGC0L7QsiDQutC+0YLQvtGA0L7Qs9C+INGE0L7RgNC80LjRgNGD0LXRgtGB0Y8g0L3QvtCy0YvQuSDQvNCw0YHRgdC40LJcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW4g0JzQuNC90LjQvNCw0LvRjNC90LDRjyDQstC+0LfQvNC+0LbQvdCw0Y8g0LTQu9C40L3QsCDQstC+0LfQstGA0LDRidCw0LXQvNC+0LPQviDQvNCw0YHRgdC40LLQsCAo0L/QviDRg9C80L7Qu9GH0LDQvdC40Y4gPSAxKVxuICogQHBhcmFtIHtudW1iZXJ9IG1heCDQnNCw0LrRgdC40LzQsNC70YzQvdCw0Y8g0LLQvtC30LzQvtC20L3QsNGPINC00LvQuNC90LAg0LLQvtC30LLRgNCw0YnQsNC10LzQvtCz0L4g0LzQsNGB0YHQuNCy0LAgKNC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOID0g0LTQu9C40L3QtSDQvNCw0YHRgdC40LLQsCBpbml0aWFsQXJyYXkpXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqL1xuY29uc3QgZ2V0UmFuZG9tQXJyYXkgPSAoaW5pdGlhbEFycmF5LCBtaW4gPSAxLCBtYXggPSBpbml0aWFsQXJyYXkubGVuZ3RoKSA9PiB7XG4gIGNvbnN0IGNvcGllZEFycmF5ID0gaW5pdGlhbEFycmF5LnNsaWNlKCk7XG4gIGNvbnN0IGxlbmd0aCA9IGdldFJhbmRvbU51bWJlcihtaW4sIG1heCk7XG5cbiAgY29uc3QgaXRlciA9IChhY2MsIGFycmF5KSA9PiB7XG4gICAgaWYgKGFjYy5sZW5ndGggPT09IGxlbmd0aCkge1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9XG5cbiAgICBjb25zdCByYW5kb21FbGVtZW50ID0gZ2V0UmFuZG9tQXJyYXlFbGVtZW50KGFycmF5LCB0cnVlKTtcbiAgICByZXR1cm4gaXRlcihbLi4uYWNjLCByYW5kb21FbGVtZW50XSwgYXJyYXkpO1xuICB9O1xuXG4gIHJldHVybiBpdGVyKFtdLCBjb3BpZWRBcnJheSk7XG59O1xuXG5leHBvcnQgLyoqXG4gKiDQo9C00LDQu9GP0LXRgiDQtNC+0YfQtdGA0L3QuNC1IERPTS3RjdC70LXQvNC10L3RgtGLINGDINGN0LvQtdC80LXQvdGC0LAgcGFyZW50XG4gKlxuICogQHBhcmFtIHtOb2RlfSBwYXJlbnRcbiAqL1xuY29uc3QgcmVtb3ZlQ2hpbGRyZW4gPSAocGFyZW50KSA9PiB7XG4gIHdoaWxlIChwYXJlbnQubGFzdENoaWxkKSB7XG4gICAgcGFyZW50LnJlbW92ZUNoaWxkKHBhcmVudC5sYXN0Q2hpbGQpO1xuICB9XG59O1xuXG5leHBvcnQgLyoqXG4gKiDQktGL0LfRi9Cy0LDQtdGCINC/0LXRgNC10LTQsNC90L3Rg9GOINGE0YPQvdC60YbQuNGOIGFjdGlvbiwg0LXRgdC70Lgg0L3QsNC20LDRgtCw0Y8g0LrQu9Cw0LLQuNGI0LAgLSBFc2NcbiAqXG4gKiBAcGFyYW0ge0V2ZW50fSBldnRcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGFjdGlvblxuICovXG5jb25zdCBydW5PbkVzY1ByZXNzID0gKGV2dCwgYWN0aW9uKSA9PiB7XG4gIGlmIChldnQua2V5Q29kZSA9PT0gRVNDX0tFWV9DT0RFKSB7XG4gICAgYWN0aW9uKCk7XG4gIH1cbn07XG5cbmxldCBsYXN0VGltZW91dDtcblxuZXhwb3J0IC8qKlxuICog0J7RgtC60LvQsNC00YvQstCw0LXRgiDQstGL0L/QvtC70L3QtdC90LjQtSDRhNGD0L3QutGG0LjQuCBjYiDQvdCwINCy0YDQtdC80Y8gZGVib3VuY2VJbnRlcnZhbFxuICog0Lgg0L/RgNC10LTQvtGC0LLRgNCw0YnQsNC10YIgJ9C00YDQtdCx0LXQt9CzJyDQv9GA0Lgg0L/QvtCy0YLQvtGA0L7QvdC+0Lwg0L7QsdGA0LDRidC10L3QuNC4INC6INGE0YPQutC90YbQuNC4IGNiINGA0LDQvdGM0YjQtSxcbiAqINGH0LXQvCDRh9C10YDQtdC3INCy0YDQtdC80Y8gZGVib3VuY2VJbnRlcnZhbFxuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNiINCS0YvQv9C+0LvQvdGP0LXQvNCw0Y8g0YTRg9C90LrRhtC40Y9cbiAqIEBwYXJhbSB7bnVtYmVyfSBkZWJvdW5jZUludGVydmFsINCS0YDQtdC80Y8g0LIg0LzRgVxuICovXG5jb25zdCBkZWJvdW5jZSA9IChjYiwgZGVib3VuY2VJbnRlcnZhbCkgPT4ge1xuICBpZiAobGFzdFRpbWVvdXQpIHtcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGxhc3RUaW1lb3V0KTtcbiAgfVxuICBsYXN0VGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KGNiLCBkZWJvdW5jZUludGVydmFsKTtcbn07XG4iXX0=